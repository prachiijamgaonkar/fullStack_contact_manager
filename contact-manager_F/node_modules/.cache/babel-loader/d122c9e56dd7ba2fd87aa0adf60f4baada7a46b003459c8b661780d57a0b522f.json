{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\contact-manager (1)\\\\contact-manager\\\\src\\\\Component\\\\Contacts\\\\edit\\\\EditContact.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState ,useEffect} from 'react'\n// import { Link,useNavigate, useParams } from 'react-router-dom'\n// import { ContactServices } from '../../../Services/ContactServices'\n\n// const EditContact = () => {\n//   let navigate=useNavigate()\n//   let{contactId}=useParams()\n//   let [state,setState]=useState({\n//     loading:true,\n//     contact:{\n//       name:\"\",\n//       photo:\"\",\n//       mobile:\"\",\n//       email:\"\",\n//       title:\"\",\n//       company:\"\",\n//       groupId:\"\"\n//     },\n//     errorMessage:\"\"\n//   })\n\n//   useEffect(()=>{\n//     let promise=new Promise((res,rej)=>{\n//       setState({...state,loading:true});\n//       let response=ContactServices.getContact(contactId)\n//       res(response)\n//     })\n\n//     promise.then((res1)=>{\n//       const foundContact = res1.data.data.find( contact=>res1.data.data.id=== parseInt(contactId)); // Use parseInt if contactId is a string\n//       setState({...state,loading:false,contact:foundContact});\n//     }).catch(()=>{\n//       setState({...state,loading:false,errorMassage:alert('data not found')});\n//     })\n//   },[contactId])\n//   let {loading,contact,errorMassage}=state\n\n//   const updateHandle=(event)=>{\n//     setState({...state,contact:{\n//       ...state.contact,[event.target.name]:event.target.value\n//     }})\n//   }\n//   const submitHandle=(event)=>{\n//     event.preventDefault()\n//     let promise=new Promise((res,rej)=>{\n//       setState({...state,loading:true})\n//       let postData=ContactServices.updateContact(contact,contactId)\n//       res(postData)\n//     })\n\n//     promise.then((res1)=>{\n//       if (res1) {\n//         setState({...state,loading:false})\n//         navigate(\"/Contacts/list\",{replace:true})\n\n//       } else {\n//         setState({...state,loading:false})\n//         navigate(\"/Contacts/edit\",{replace:false})\n//       }\n//     }).catch(()=>{\n//       setState({...state,loading:false,errorMessage:alert('data is not posted')})\n//     })\n//   }\n//   return (\n//     <>\n//     {/* <pre>{JSON.stringify(contact)}</pre> */}\n//      <section className='edit-contact'>\n//         <div className=\"container p-3\">\n//           <div className=\"row\">\n//             <div className=\"col\">\n//               <p className=\"h3 text-primary\">Edit Contact</p>\n//               <p className='fst-italic'>Lorem ipsum dolor sit amet consectetur adipisicing elit. In natus ipsum doloribus rerum aperiam est quibusdam? Quam unde eligendi delectus veritatis molestias officiis omnis illum, soluta at. Deserunt, aliquid harum.</p>\n//             </div>\n//             <div className=\"row align-items-center\">\n//               <div className=\"col-md-4\">\n//                 <form action=\"\" onSubmit={submitHandle}>\n//                   <div className=\"mb-2\">\n//                     <input type=\"text\" name='name' onChange={updateHandle} placeholder='NAME' value={contact.name} className='form-control' />\n//                   </div>\n//                   <div className=\"mb-2\">\n//                     <input type=\"text\" name='photo' onChange={updateHandle} placeholder='Photo Url' value={contact.photo}  className='form-control' />\n//                   </div>\n//                   <div className=\"mb-2\">\n//                     <input type=\"number\" name='mobile' onChange={updateHandle} placeholder='Mobile' value={contact.mobile} className='form-control' />\n//                   </div>\n//                   <div className=\"mb-2\">\n//                     <input type=\"email\" name='email' onChange={updateHandle} placeholder='Email' value={contact.email} className='form-control' />\n//                   </div>\n//                   <div className=\"mb-2\">\n//                     <input type=\"text\" name='company' onChange={updateHandle} placeholder='Company' value={contact.company} className='form-control' />\n//                   </div>\n//                   <div className=\"mb-2\">\n//                     <input type=\"text\" name='title' onChange={updateHandle} placeholder='Title' value={contact.title} className='form-control' />\n//                   </div>\n//                   <div className=\"mb-2\">\n//                   <input type=\"text\" name='groupId'  placeholder='Group'  value={contact.groupId} onChange={updateHandle} className='form-control' />\n//                   </div>\n\n//                   <div>\n//                     <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\"/>\n//                     <Link to={'/Contacts/list'} className='btn btn-danger ms-2'>Cancel</Link>\n//                   </div>\n//                 </form>\n//               </div>\n//               <div className=\"col-md-6\">\n//                 <img src={contact.photo} alt=\"\" className='contact-img'/>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </section>\n//     </>\n//   )\n// }\n\n// export default EditContact\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { ContactServices } from '../../../Services/ContactServices';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditContact = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    contactId\n  } = useParams();\n  const [state, setState] = useState({\n    loading: true,\n    contact: {\n      name: '',\n      photo: '',\n      mobile: '',\n      email: '',\n      title: '',\n      company: '',\n      groupId: ''\n    },\n    errorMessage: ''\n  });\n  useEffect(() => {\n    const fetchContact = async () => {\n      try {\n        setState(prevState => ({\n          ...prevState,\n          loading: true\n        }));\n\n        // Fetch contact from API\n        const response = await ContactServices.getContact(contactId);\n\n        // Check if response and data structure are correct\n        if (response.data && response.data.data && Array.isArray(response.data.data)) {\n          // Find the contact by its id\n          const foundContact = response.data.data.find(contact => contact.id === parseInt(contactId));\n          if (foundContact) {\n            setState({\n              ...state,\n              loading: false,\n              contact: foundContact\n            });\n          } else {\n            setState({\n              ...state,\n              loading: false,\n              errorMessage: 'Contact not found'\n            });\n          }\n        } else {\n          setState({\n            ...state,\n            loading: false,\n            errorMessage: 'Invalid data structure from server'\n          });\n        }\n      } catch (error) {\n        setState({\n          ...state,\n          loading: false,\n          errorMessage: 'Error fetching contact data'\n        });\n      }\n    };\n    fetchContact();\n  }, [contactId]);\n  const {\n    loading,\n    contact,\n    errorMessage\n  } = state;\n  const updateHandle = event => {\n    setState({\n      ...state,\n      contact: {\n        ...state.contact,\n        [event.target.name]: event.target.value\n      }\n    });\n  };\n  const submitHandle = async event => {\n    event.preventDefault();\n    try {\n      setState({\n        ...state,\n        loading: true\n      });\n\n      // Update contact using API\n      const postData = await ContactServices.updateContact(contact, contactId);\n      if (postData) {\n        setState({\n          ...state,\n          loading: false\n        });\n        navigate('/Contacts/list', {\n          replace: true\n        });\n      } else {\n        setState({\n          ...state,\n          loading: false,\n          errorMessage: 'Failed to update contact'\n        });\n      }\n    } catch (error) {\n      setState({\n        ...state,\n        loading: false,\n        errorMessage: 'Error updating contact'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"edit-contact\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container p-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"h3 text-primary\",\n              children: \"Edit Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"fst-italic\",\n              children: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. In natus ipsum doloribus rerum aperiam est quibusdam? Quam unde eligendi delectus veritatis molestias officiis omnis illum, soluta at. Deserunt, aliquid harum.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: submitHandle,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"name\",\n                    onChange: updateHandle,\n                    placeholder: \"NAME\",\n                    value: contact.name,\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"photo\",\n                    onChange: updateHandle,\n                    placeholder: \"Photo Url\",\n                    value: contact.photo,\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    name: \"mobile\",\n                    onChange: updateHandle,\n                    placeholder: \"Mobile\",\n                    value: contact.mobile,\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    name: \"email\",\n                    onChange: updateHandle,\n                    placeholder: \"Email\",\n                    value: contact.email,\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"company\",\n                    onChange: updateHandle,\n                    placeholder: \"Company\",\n                    value: contact.company,\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"title\",\n                    onChange: updateHandle,\n                    placeholder: \"Title\",\n                    value: contact.title,\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"groupId\",\n                    placeholder: \"Group\",\n                    value: contact.groupId,\n                    onChange: updateHandle,\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"submit\",\n                    value: \"Update\",\n                    className: \"btn btn-primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: '/Contacts/list',\n                    className: \"btn btn-danger ms-2\",\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: contact.photo,\n                alt: \"\",\n                className: \"contact-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(EditContact, \"KfqaN/KG3Dn4hmayinkkNUPw9/w=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = EditContact;\nexport default EditContact;\nvar _c;\n$RefreshReg$(_c, \"EditContact\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useParams","ContactServices","jsxDEV","_jsxDEV","Fragment","_Fragment","EditContact","_s","navigate","contactId","state","setState","loading","contact","name","photo","mobile","email","title","company","groupId","errorMessage","fetchContact","prevState","response","getContact","data","Array","isArray","foundContact","find","id","parseInt","error","updateHandle","event","target","value","submitHandle","preventDefault","postData","updateContact","replace","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","to","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/contact-manager (1)/contact-manager/src/Component/Contacts/edit/EditContact.jsx"],"sourcesContent":["// import React, { useState ,useEffect} from 'react'\r\n// import { Link,useNavigate, useParams } from 'react-router-dom'\r\n// import { ContactServices } from '../../../Services/ContactServices'\r\n\r\n// const EditContact = () => {\r\n//   let navigate=useNavigate()\r\n//   let{contactId}=useParams()\r\n//   let [state,setState]=useState({\r\n//     loading:true,\r\n//     contact:{\r\n//       name:\"\",\r\n//       photo:\"\",\r\n//       mobile:\"\",\r\n//       email:\"\",\r\n//       title:\"\",\r\n//       company:\"\",\r\n//       groupId:\"\"\r\n//     },\r\n//     errorMessage:\"\"\r\n//   })\r\n\r\n//   useEffect(()=>{\r\n//     let promise=new Promise((res,rej)=>{\r\n//       setState({...state,loading:true});\r\n//       let response=ContactServices.getContact(contactId)\r\n//       res(response)\r\n//     })\r\n\r\n//     promise.then((res1)=>{\r\n//       const foundContact = res1.data.data.find( contact=>res1.data.data.id=== parseInt(contactId)); // Use parseInt if contactId is a string\r\n//       setState({...state,loading:false,contact:foundContact});\r\n//     }).catch(()=>{\r\n//       setState({...state,loading:false,errorMassage:alert('data not found')});\r\n//     })\r\n//   },[contactId])\r\n//   let {loading,contact,errorMassage}=state\r\n\r\n//   const updateHandle=(event)=>{\r\n//     setState({...state,contact:{\r\n//       ...state.contact,[event.target.name]:event.target.value\r\n//     }})\r\n//   }\r\n//   const submitHandle=(event)=>{\r\n//     event.preventDefault()\r\n//     let promise=new Promise((res,rej)=>{\r\n//       setState({...state,loading:true})\r\n//       let postData=ContactServices.updateContact(contact,contactId)\r\n//       res(postData)\r\n//     })\r\n\r\n//     promise.then((res1)=>{\r\n//       if (res1) {\r\n//         setState({...state,loading:false})\r\n//         navigate(\"/Contacts/list\",{replace:true})\r\n\r\n//       } else {\r\n//         setState({...state,loading:false})\r\n//         navigate(\"/Contacts/edit\",{replace:false})\r\n//       }\r\n//     }).catch(()=>{\r\n//       setState({...state,loading:false,errorMessage:alert('data is not posted')})\r\n//     })\r\n//   }\r\n//   return (\r\n//     <>\r\n//     {/* <pre>{JSON.stringify(contact)}</pre> */}\r\n//      <section className='edit-contact'>\r\n//         <div className=\"container p-3\">\r\n//           <div className=\"row\">\r\n//             <div className=\"col\">\r\n//               <p className=\"h3 text-primary\">Edit Contact</p>\r\n//               <p className='fst-italic'>Lorem ipsum dolor sit amet consectetur adipisicing elit. In natus ipsum doloribus rerum aperiam est quibusdam? Quam unde eligendi delectus veritatis molestias officiis omnis illum, soluta at. Deserunt, aliquid harum.</p>\r\n//             </div>\r\n//             <div className=\"row align-items-center\">\r\n//               <div className=\"col-md-4\">\r\n//                 <form action=\"\" onSubmit={submitHandle}>\r\n//                   <div className=\"mb-2\">\r\n//                     <input type=\"text\" name='name' onChange={updateHandle} placeholder='NAME' value={contact.name} className='form-control' />\r\n//                   </div>\r\n//                   <div className=\"mb-2\">\r\n//                     <input type=\"text\" name='photo' onChange={updateHandle} placeholder='Photo Url' value={contact.photo}  className='form-control' />\r\n//                   </div>\r\n//                   <div className=\"mb-2\">\r\n//                     <input type=\"number\" name='mobile' onChange={updateHandle} placeholder='Mobile' value={contact.mobile} className='form-control' />\r\n//                   </div>\r\n//                   <div className=\"mb-2\">\r\n//                     <input type=\"email\" name='email' onChange={updateHandle} placeholder='Email' value={contact.email} className='form-control' />\r\n//                   </div>\r\n//                   <div className=\"mb-2\">\r\n//                     <input type=\"text\" name='company' onChange={updateHandle} placeholder='Company' value={contact.company} className='form-control' />\r\n//                   </div>\r\n//                   <div className=\"mb-2\">\r\n//                     <input type=\"text\" name='title' onChange={updateHandle} placeholder='Title' value={contact.title} className='form-control' />\r\n//                   </div>\r\n//                   <div className=\"mb-2\">\r\n//                   <input type=\"text\" name='groupId'  placeholder='Group'  value={contact.groupId} onChange={updateHandle} className='form-control' />\r\n//                   </div>\r\n\r\n//                   <div>\r\n//                     <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\"/>\r\n//                     <Link to={'/Contacts/list'} className='btn btn-danger ms-2'>Cancel</Link>\r\n//                   </div>\r\n//                 </form>\r\n//               </div>\r\n//               <div className=\"col-md-6\">\r\n//                 <img src={contact.photo} alt=\"\" className='contact-img'/>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </section>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default EditContact\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport { ContactServices } from '../../../Services/ContactServices';\r\n\r\nconst EditContact = () => {\r\n  const navigate = useNavigate();\r\n  const { contactId } = useParams();\r\n\r\n  const [state, setState] = useState({\r\n    loading: true,\r\n    contact: {\r\n      name: '',\r\n      photo: '',\r\n      mobile: '',\r\n      email: '',\r\n      title: '',\r\n      company: '',\r\n      groupId: ''\r\n    },\r\n    errorMessage: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchContact = async () => {\r\n      try {\r\n        setState((prevState) => ({ ...prevState, loading: true }));\r\n        \r\n        // Fetch contact from API\r\n        const response = await ContactServices.getContact(contactId);\r\n\r\n        // Check if response and data structure are correct\r\n        if (response.data && response.data.data && Array.isArray(response.data.data)) {\r\n          // Find the contact by its id\r\n          const foundContact = response.data.data.find(contact => contact.id === parseInt(contactId));\r\n\r\n          if (foundContact) {\r\n            setState({ ...state, loading: false, contact: foundContact });\r\n          } else {\r\n            setState({ ...state, loading: false, errorMessage: 'Contact not found' });\r\n          }\r\n        } else {\r\n          setState({ ...state, loading: false, errorMessage: 'Invalid data structure from server' });\r\n        }\r\n      } catch (error) {\r\n        setState({ ...state, loading: false, errorMessage: 'Error fetching contact data' });\r\n      }\r\n    };\r\n\r\n    fetchContact();\r\n  }, [contactId]);\r\n\r\n  const { loading, contact, errorMessage } = state;\r\n\r\n  const updateHandle = (event) => {\r\n    setState({\r\n      ...state,\r\n      contact: {\r\n        ...state.contact,\r\n        [event.target.name]: event.target.value\r\n      }\r\n    });\r\n  };\r\n\r\n  const submitHandle = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      setState({ ...state, loading: true });\r\n\r\n      // Update contact using API\r\n      const postData = await ContactServices.updateContact(contact, contactId);\r\n\r\n      if (postData) {\r\n        setState({ ...state, loading: false });\r\n        navigate('/Contacts/list', { replace: true });\r\n      } else {\r\n        setState({ ...state, loading: false, errorMessage: 'Failed to update contact' });\r\n      }\r\n    } catch (error) {\r\n      setState({ ...state, loading: false, errorMessage: 'Error updating contact' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className='edit-contact'>\r\n        <div className='container p-3'>\r\n          <div className='row'>\r\n            <div className='col'>\r\n              <p className='h3 text-primary'>Edit Contact</p>\r\n              <p className='fst-italic'>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. In natus ipsum doloribus rerum aperiam est quibusdam? Quam unde eligendi delectus veritatis molestias officiis omnis illum, soluta at. Deserunt, aliquid harum.\r\n              </p>\r\n            </div>\r\n            <div className='row align-items-center'>\r\n              <div className='col-md-4'>\r\n                <form onSubmit={submitHandle}>\r\n                  <div className='mb-2'>\r\n                    <input\r\n                      type='text'\r\n                      name='name'\r\n                      onChange={updateHandle}\r\n                      placeholder='NAME'\r\n                      value={contact.name}\r\n                      className='form-control'\r\n                    />\r\n                  </div>\r\n                  <div className='mb-2'>\r\n                    <input\r\n                      type='text'\r\n                      name='photo'\r\n                      onChange={updateHandle}\r\n                      placeholder='Photo Url'\r\n                      value={contact.photo}\r\n                      className='form-control'\r\n                    />\r\n                  </div>\r\n                  <div className='mb-2'>\r\n                    <input\r\n                      type='number'\r\n                      name='mobile'\r\n                      onChange={updateHandle}\r\n                      placeholder='Mobile'\r\n                      value={contact.mobile}\r\n                      className='form-control'\r\n                    />\r\n                  </div>\r\n                  <div className='mb-2'>\r\n                    <input\r\n                      type='email'\r\n                      name='email'\r\n                      onChange={updateHandle}\r\n                      placeholder='Email'\r\n                      value={contact.email}\r\n                      className='form-control'\r\n                    />\r\n                  </div>\r\n                  <div className='mb-2'>\r\n                    <input\r\n                      type='text'\r\n                      name='company'\r\n                      onChange={updateHandle}\r\n                      placeholder='Company'\r\n                      value={contact.company}\r\n                      className='form-control'\r\n                    />\r\n                  </div>\r\n                  <div className='mb-2'>\r\n                    <input\r\n                      type='text'\r\n                      name='title'\r\n                      onChange={updateHandle}\r\n                      placeholder='Title'\r\n                      value={contact.title}\r\n                      className='form-control'\r\n                    />\r\n                  </div>\r\n                  <div className='mb-2'>\r\n                    <input\r\n                      type='text'\r\n                      name='groupId'\r\n                      placeholder='Group'\r\n                      value={contact.groupId}\r\n                      onChange={updateHandle}\r\n                      className='form-control'\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <input type='submit' value='Update' className='btn btn-primary' />\r\n                    <Link to={'/Contacts/list'} className='btn btn-danger ms-2'>Cancel</Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n              <div className='col-md-6'>\r\n                <img src={contact.photo} alt='' className='contact-img' />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditContact;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAC/D,SAASC,eAAe,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpE,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEU;EAAU,CAAC,GAAGT,SAAS,CAAC,CAAC;EAEjC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC;IACjCgB,OAAO,EAAE,IAAI;IACbC,OAAO,EAAE;MACPC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE;IACX,CAAC;IACDC,YAAY,EAAE;EAChB,CAAC,CAAC;EAEFxB,SAAS,CAAC,MAAM;IACd,MAAMyB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}