{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\contact-manager (1)\\\\contact-manager\\\\src\\\\Component\\\\Contacts\\\\edit\\\\EditContact.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState ,useEffect} from 'react'\n// import { Link,useNavigate, useParams } from 'react-router-dom'\n// import { ContactServices } from '../../../Services/ContactServices'\n\n// const EditContact = () => {\n//   let navigate=useNavigate()\n//   let{contactId}=useParams()\n//   let [state,setState]=useState({\n//     loading:true,\n//     contact:{\n//       name:\"\",\n//       photo:\"\",\n//       mobile:\"\",\n//       email:\"\",\n//       title:\"\",\n//       company:\"\",\n//       groupId:\"\"\n//     },\n//     errorMessage:\"\"\n//   })\n\n//   useEffect(()=>{\n//     let promise=new Promise((res,rej)=>{\n//       setState({...state,loading:true});\n//       let response=ContactServices.getContact(contactId)\n//       res(response)\n//     })\n\n//     promise.then((res1)=>{\n//       setState({...state,loading:false,contact:res1.data});\n//     }).catch(()=>{\n//       setState({...state,loading:false,errorMassage:alert('data not found')});\n//     })\n//   },[contactId])\n//   let {loading,contact,errorMassage}=state\n\n//   const updateHandle=(event)=>{\n//     setState({...state,contact:{\n//       ...state.contact,[event.target.name]:event.target.value\n//     }})\n//   }\n//   const submitHandle=(event)=>{\n//     event.preventDefault()\n//     let promise=new Promise((res,rej)=>{\n//       setState({...state,loading:true})\n//       let postData=ContactServices.updateContact(contact,contactId)\n//       res(postData)\n//     })\n\n//     promise.then((res1)=>{\n//       if (res1) {\n//         setState({...state,loading:false})\n//         navigate(\"/Contacts/list\",{replace:true})\n\n//       } else {\n//         setState({...state,loading:false})\n//         navigate(\"/Contacts/edit\",{replace:false})\n//       }\n//     }).catch(()=>{\n//       setState({...state,loading:false,errorMessage:alert('data is not posted')})\n//     })\n//   }\n//   return (\n//     <>\n//     {/* <pre>{JSON.stringify(contact)}</pre> */}\n//      <section className='edit-contact'>\n//         <div className=\"container p-3\">\n//           <div className=\"row\">\n//             <div className=\"col\">\n//               <p className=\"h3 text-primary\">Edit Contact</p>\n//               <p className='fst-italic'>Lorem ipsum dolor sit amet consectetur adipisicing elit. In natus ipsum doloribus rerum aperiam est quibusdam? Quam unde eligendi delectus veritatis molestias officiis omnis illum, soluta at. Deserunt, aliquid harum.</p>\n//             </div>\n//             <div className=\"row align-items-center\">\n//               <div className=\"col-md-4\">\n//                 <form action=\"\" onSubmit={submitHandle}>\n//                   <div className=\"mb-2\">\n//                     <input type=\"text\" name='name' onChange={updateHandle} placeholder='NAME' value={contact.name} className='form-control' />\n//                   </div>\n//                   <div className=\"mb-2\">\n//                     <input type=\"text\" name='photo' onChange={updateHandle} placeholder='Photo Url' value={contact.photo}  className='form-control' />\n//                   </div>\n//                   <div className=\"mb-2\">\n//                     <input type=\"number\" name='mobile' onChange={updateHandle} placeholder='Mobile' value={contact.mobile} className='form-control' />\n//                   </div>\n//                   <div className=\"mb-2\">\n//                     <input type=\"email\" name='email' onChange={updateHandle} placeholder='Email' value={contact.email} className='form-control' />\n//                   </div>\n//                   <div className=\"mb-2\">\n//                     <input type=\"text\" name='company' onChange={updateHandle} placeholder='Company' value={contact.company} className='form-control' />\n//                   </div>\n//                   <div className=\"mb-2\">\n//                     <input type=\"text\" name='title' onChange={updateHandle} placeholder='Title' value={contact.title} className='form-control' />\n//                   </div>\n//                   <div className=\"mb-2\">\n//                   <input type=\"text\" name='groupId'  placeholder='Group'  value={contact.groupId} onChange={updateHandle} className='form-control' />\n//                   </div>\n\n//                   <div>\n//                     <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\"/>\n//                     <Link to={'/Contacts/list'} className='btn btn-danger ms-2'>Cancel</Link>\n//                   </div>\n//                 </form>\n//               </div>\n//               <div className=\"col-md-6\">\n//                 <img src={contact.photo} alt=\"\" className='contact-img'/>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </section>\n//     </>\n//   )\n// }\n\n// export default EditContact\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { ContactServices } from '../../../Services/ContactServices';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditContact = () => {\n  _s();\n  let navigate = useNavigate();\n  let {\n    contactId\n  } = useParams();\n  let [state, setState] = useState({\n    loading: true,\n    contact: {\n      name: \"\",\n      photo: \"\",\n      mobile: \"\",\n      email: \"\",\n      title: \"\",\n      company: \"\",\n      groupId: \"\"\n    },\n    errorMessage: \"\"\n  });\n  useEffect(() => {\n    // Fetch contact data using the updated structure\n    const fetchContactData = async () => {\n      setState(prevState => ({\n        ...prevState,\n        loading: true\n      }));\n      try {\n        const response = await ContactServices.getContact(contactId);\n        const contactData = response.data.find(contact => contact.id === parseInt(contactId)); // Adjust to your ID type if necessary\n        if (contactData) {\n          setState(prevState => ({\n            ...prevState,\n            loading: false,\n            contact: contactData\n          }));\n        } else {\n          setState(prevState => ({\n            ...prevState,\n            loading: false,\n            errorMessage: 'Contact not found'\n          }));\n        }\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          loading: false,\n          errorMessage: 'Data not found'\n        }));\n      }\n    };\n    fetchContactData();\n  }, [contactId]);\n  let {\n    loading,\n    contact,\n    errorMessage\n  } = state;\n  const updateHandle = event => {\n    setState(prevState => ({\n      ...prevState,\n      contact: {\n        ...prevState.contact,\n        [event.target.name]: event.target.value\n      }\n    }));\n  };\n  const submitHandle = async event => {\n    event.preventDefault();\n    setState(prevState => ({\n      ...prevState,\n      loading: true\n    }));\n    try {\n      const res1 = await ContactServices.updateContact(contact, contactId);\n      if (res1) {\n        setState(prevState => ({\n          ...prevState,\n          loading: false\n        }));\n        navigate(\"/Contacts/list\", {\n          replace: true\n        });\n      } else {\n        setState(prevState => ({\n          ...prevState,\n          loading: false\n        }));\n        navigate(\"/Contacts/edit\", {\n          replace: false\n        });\n      }\n    } catch (error) {\n      setState(prevState => ({\n        ...prevState,\n        loading: false,\n        errorMessage: 'Data is not posted'\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"edit-contact\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container p-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"h3 text-primary\",\n              children: \"Edit Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"fst-italic\",\n              children: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. In natus ipsum doloribus rerum aperiam est quibusdam? Quam unde eligendi delectus veritatis molestias officiis omnis illum, soluta at. Deserunt, aliquid harum.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                action: \"\",\n                onSubmit: submitHandle,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"name\",\n                    onChange: updateHandle,\n                    placeholder: \"NAME\",\n                    value: contact.name,\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"photo\",\n                    onChange: updateHandle,\n                    placeholder: \"Photo Url\",\n                    value: contact.photo,\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    name: \"mobile\",\n                    onChange: updateHandle,\n                    placeholder: \"Mobile\",\n                    value: contact.mobile,\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    name: \"email\",\n                    onChange: updateHandle,\n                    placeholder: \"Email\",\n                    value: contact.email,\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"company\",\n                    onChange: updateHandle,\n                    placeholder: \"Company\",\n                    value: contact.company,\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"title\",\n                    onChange: updateHandle,\n                    placeholder: \"Title\",\n                    value: contact.title,\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"groupId\",\n                    placeholder: \"Group\",\n                    value: contact.groupId,\n                    onChange: updateHandle,\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"submit\",\n                    value: \"Update\",\n                    className: \"btn btn-primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    to: '/Contacts/list',\n                    className: \"btn btn-danger ms-2\",\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: contact.photo,\n                alt: \"\",\n                className: \"contact-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(EditContact, \"HcCKsVPhQb7w/R1wBGn88jvmC2c=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = EditContact;\nexport default EditContact;\nvar _c;\n$RefreshReg$(_c, \"EditContact\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useParams","ContactServices","jsxDEV","_jsxDEV","Fragment","_Fragment","EditContact","_s","navigate","contactId","state","setState","loading","contact","name","photo","mobile","email","title","company","groupId","errorMessage","fetchContactData","prevState","response","getContact","contactData","data","find","id","parseInt","error","updateHandle","event","target","value","submitHandle","preventDefault","res1","updateContact","replace","children","fileName","_jsxFileName","lineNumber","columnNumber","className","action","onSubmit","type","onChange","placeholder","to","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/contact-manager (1)/contact-manager/src/Component/Contacts/edit/EditContact.jsx"],"sourcesContent":["// import React, { useState ,useEffect} from 'react'\r\n// import { Link,useNavigate, useParams } from 'react-router-dom'\r\n// import { ContactServices } from '../../../Services/ContactServices'\r\n\r\n// const EditContact = () => {\r\n//   let navigate=useNavigate()\r\n//   let{contactId}=useParams()\r\n//   let [state,setState]=useState({\r\n//     loading:true,\r\n//     contact:{\r\n//       name:\"\",\r\n//       photo:\"\",\r\n//       mobile:\"\",\r\n//       email:\"\",\r\n//       title:\"\",\r\n//       company:\"\",\r\n//       groupId:\"\"\r\n//     },\r\n//     errorMessage:\"\"\r\n//   })\r\n\r\n//   useEffect(()=>{\r\n//     let promise=new Promise((res,rej)=>{\r\n//       setState({...state,loading:true});\r\n//       let response=ContactServices.getContact(contactId)\r\n//       res(response)\r\n//     })\r\n\r\n//     promise.then((res1)=>{\r\n//       setState({...state,loading:false,contact:res1.data});\r\n//     }).catch(()=>{\r\n//       setState({...state,loading:false,errorMassage:alert('data not found')});\r\n//     })\r\n//   },[contactId])\r\n//   let {loading,contact,errorMassage}=state\r\n\r\n//   const updateHandle=(event)=>{\r\n//     setState({...state,contact:{\r\n//       ...state.contact,[event.target.name]:event.target.value\r\n//     }})\r\n//   }\r\n//   const submitHandle=(event)=>{\r\n//     event.preventDefault()\r\n//     let promise=new Promise((res,rej)=>{\r\n//       setState({...state,loading:true})\r\n//       let postData=ContactServices.updateContact(contact,contactId)\r\n//       res(postData)\r\n//     })\r\n\r\n//     promise.then((res1)=>{\r\n//       if (res1) {\r\n//         setState({...state,loading:false})\r\n//         navigate(\"/Contacts/list\",{replace:true})\r\n\r\n//       } else {\r\n//         setState({...state,loading:false})\r\n//         navigate(\"/Contacts/edit\",{replace:false})\r\n//       }\r\n//     }).catch(()=>{\r\n//       setState({...state,loading:false,errorMessage:alert('data is not posted')})\r\n//     })\r\n//   }\r\n//   return (\r\n//     <>\r\n//     {/* <pre>{JSON.stringify(contact)}</pre> */}\r\n//      <section className='edit-contact'>\r\n//         <div className=\"container p-3\">\r\n//           <div className=\"row\">\r\n//             <div className=\"col\">\r\n//               <p className=\"h3 text-primary\">Edit Contact</p>\r\n//               <p className='fst-italic'>Lorem ipsum dolor sit amet consectetur adipisicing elit. In natus ipsum doloribus rerum aperiam est quibusdam? Quam unde eligendi delectus veritatis molestias officiis omnis illum, soluta at. Deserunt, aliquid harum.</p>\r\n//             </div>\r\n//             <div className=\"row align-items-center\">\r\n//               <div className=\"col-md-4\">\r\n//                 <form action=\"\" onSubmit={submitHandle}>\r\n//                   <div className=\"mb-2\">\r\n//                     <input type=\"text\" name='name' onChange={updateHandle} placeholder='NAME' value={contact.name} className='form-control' />\r\n//                   </div>\r\n//                   <div className=\"mb-2\">\r\n//                     <input type=\"text\" name='photo' onChange={updateHandle} placeholder='Photo Url' value={contact.photo}  className='form-control' />\r\n//                   </div>\r\n//                   <div className=\"mb-2\">\r\n//                     <input type=\"number\" name='mobile' onChange={updateHandle} placeholder='Mobile' value={contact.mobile} className='form-control' />\r\n//                   </div>\r\n//                   <div className=\"mb-2\">\r\n//                     <input type=\"email\" name='email' onChange={updateHandle} placeholder='Email' value={contact.email} className='form-control' />\r\n//                   </div>\r\n//                   <div className=\"mb-2\">\r\n//                     <input type=\"text\" name='company' onChange={updateHandle} placeholder='Company' value={contact.company} className='form-control' />\r\n//                   </div>\r\n//                   <div className=\"mb-2\">\r\n//                     <input type=\"text\" name='title' onChange={updateHandle} placeholder='Title' value={contact.title} className='form-control' />\r\n//                   </div>\r\n//                   <div className=\"mb-2\">\r\n//                   <input type=\"text\" name='groupId'  placeholder='Group'  value={contact.groupId} onChange={updateHandle} className='form-control' />\r\n//                   </div>\r\n\r\n//                   <div>\r\n//                     <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\"/>\r\n//                     <Link to={'/Contacts/list'} className='btn btn-danger ms-2'>Cancel</Link>\r\n//                   </div>\r\n//                 </form>\r\n//               </div>\r\n//               <div className=\"col-md-6\">\r\n//                 <img src={contact.photo} alt=\"\" className='contact-img'/>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </section>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default EditContact\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport { ContactServices } from '../../../Services/ContactServices';\r\n\r\nconst EditContact = () => {\r\n  let navigate = useNavigate();\r\n  let { contactId } = useParams();\r\n  let [state, setState] = useState({\r\n    loading: true,\r\n    contact: {\r\n      name: \"\",\r\n      photo: \"\",\r\n      mobile: \"\",\r\n      email: \"\",\r\n      title: \"\",\r\n      company: \"\",\r\n      groupId: \"\"\r\n    },\r\n    errorMessage: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Fetch contact data using the updated structure\r\n    const fetchContactData = async () => {\r\n      setState(prevState => ({ ...prevState, loading: true }));\r\n      try {\r\n        const response = await ContactServices.getContact(contactId);\r\n        const contactData = response.data.find(contact => contact.id === parseInt(contactId)); // Adjust to your ID type if necessary\r\n        if (contactData) {\r\n          setState(prevState => ({ ...prevState, loading: false, contact: contactData }));\r\n        } else {\r\n          setState(prevState => ({ ...prevState, loading: false, errorMessage: 'Contact not found' }));\r\n        }\r\n      } catch (error) {\r\n        setState(prevState => ({ ...prevState, loading: false, errorMessage: 'Data not found' }));\r\n      }\r\n    };\r\n\r\n    fetchContactData();\r\n  }, [contactId]);\r\n\r\n  let { loading, contact, errorMessage } = state;\r\n\r\n  const updateHandle = (event) => {\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      contact: {\r\n        ...prevState.contact,\r\n        [event.target.name]: event.target.value\r\n      }\r\n    }));\r\n  };\r\n\r\n  const submitHandle = async (event) => {\r\n    event.preventDefault();\r\n    setState(prevState => ({ ...prevState, loading: true }));\r\n    try {\r\n      const res1 = await ContactServices.updateContact(contact, contactId);\r\n      if (res1) {\r\n        setState(prevState => ({ ...prevState, loading: false }));\r\n        navigate(\"/Contacts/list\", { replace: true });\r\n      } else {\r\n        setState(prevState => ({ ...prevState, loading: false }));\r\n        navigate(\"/Contacts/edit\", { replace: false });\r\n      }\r\n    } catch (error) {\r\n      setState(prevState => ({ ...prevState, loading: false, errorMessage: 'Data is not posted' }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && <p>Loading...</p>}\r\n      {errorMessage && <p className=\"text-danger\">{errorMessage}</p>}\r\n      <section className='edit-contact'>\r\n        <div className=\"container p-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <p className=\"h3 text-primary\">Edit Contact</p>\r\n              <p className='fst-italic'>Lorem ipsum dolor sit amet consectetur adipisicing elit. In natus ipsum doloribus rerum aperiam est quibusdam? Quam unde eligendi delectus veritatis molestias officiis omnis illum, soluta at. Deserunt, aliquid harum.</p>\r\n            </div>\r\n            <div className=\"row align-items-center\">\r\n              <div className=\"col-md-4\">\r\n                <form action=\"\" onSubmit={submitHandle}>\r\n                  <div className=\"mb-2\">\r\n                    <input type=\"text\" name='name' onChange={updateHandle} placeholder='NAME' value={contact.name} className='form-control' />\r\n                  </div>\r\n                  <div className=\"mb-2\">\r\n                    <input type=\"text\" name='photo' onChange={updateHandle} placeholder='Photo Url' value={contact.photo} className='form-control' />\r\n                  </div>\r\n                  <div className=\"mb-2\">\r\n                    <input type=\"number\" name='mobile' onChange={updateHandle} placeholder='Mobile' value={contact.mobile} className='form-control' />\r\n                  </div>\r\n                  <div className=\"mb-2\">\r\n                    <input type=\"email\" name='email' onChange={updateHandle} placeholder='Email' value={contact.email} className='form-control' />\r\n                  </div>\r\n                  <div className=\"mb-2\">\r\n                    <input type=\"text\" name='company' onChange={updateHandle} placeholder='Company' value={contact.company} className='form-control' />\r\n                  </div>\r\n                  <div className=\"mb-2\">\r\n                    <input type=\"text\" name='title' onChange={updateHandle} placeholder='Title' value={contact.title} className='form-control' />\r\n                  </div>\r\n                  <div className=\"mb-2\">\r\n                    <input type=\"text\" name='groupId' placeholder='Group' value={contact.groupId} onChange={updateHandle} className='form-control' />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <input type=\"submit\" value=\"Update\" className=\"btn btn-primary\" />\r\n                    <Link to={'/Contacts/list'} className='btn btn-danger ms-2'>Cancel</Link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <img src={contact.photo} alt=\"\" className='contact-img' />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditContact;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAC/D,SAASC,eAAe,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpE,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,IAAIC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC5B,IAAI;IAAEU;EAAU,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC/B,IAAI,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC;IAC/BgB,OAAO,EAAE,IAAI;IACbC,OAAO,EAAE;MACPC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE;IACX,CAAC;IACDC,YAAY,EAAE;EAChB,CAAC,CAAC;EAEFxB,SAAS,CAAC,MAAM;IACd;IACA,MAAMyB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACn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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}